// Code generated by go-swagger; DO NOT EDIT.

package machine

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/metal-stack/metal-go/api/models"
	"github.com/metal-stack/metal-lib/httperrors"
)

// UpdateBIOSReader is a Reader for the UpdateBIOS structure.
type UpdateBIOSReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBIOSReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBIOSOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateBIOSDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateBIOSOK creates a UpdateBIOSOK with default headers values
func NewUpdateBIOSOK() *UpdateBIOSOK {
	return &UpdateBIOSOK{}
}

/*UpdateBIOSOK handles this case with default header values.

OK
*/
type UpdateBIOSOK struct {
	Payload *models.V1MachineResponse
}

func (o *UpdateBIOSOK) Error() string {
	return fmt.Sprintf("[POST /v1/machine/{id}/update/bios][%d] updateBIOSOK  %+v", 200, o.Payload)
}

func (o *UpdateBIOSOK) GetPayload() *models.V1MachineResponse {
	return o.Payload
}

func (o *UpdateBIOSOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1MachineResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBIOSDefault creates a UpdateBIOSDefault with default headers values
func NewUpdateBIOSDefault(code int) *UpdateBIOSDefault {
	return &UpdateBIOSDefault{
		_statusCode: code,
	}
}

/*UpdateBIOSDefault handles this case with default header values.

Error
*/
type UpdateBIOSDefault struct {
	_statusCode int

	Payload *httperrors.HTTPErrorResponse
}

// Code gets the status code for the update b i o s default response
func (o *UpdateBIOSDefault) Code() int {
	return o._statusCode
}

func (o *UpdateBIOSDefault) Error() string {
	return fmt.Sprintf("[POST /v1/machine/{id}/update/bios][%d] updateBIOS default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateBIOSDefault) GetPayload() *httperrors.HTTPErrorResponse {
	return o.Payload
}

func (o *UpdateBIOSDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(httperrors.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
