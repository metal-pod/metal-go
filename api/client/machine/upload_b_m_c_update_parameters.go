// Code generated by go-swagger; DO NOT EDIT.

package machine

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUploadBMCUpdateParams creates a new UploadBMCUpdateParams object
// with the default values initialized.
func NewUploadBMCUpdateParams() *UploadBMCUpdateParams {
	var ()
	return &UploadBMCUpdateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUploadBMCUpdateParamsWithTimeout creates a new UploadBMCUpdateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUploadBMCUpdateParamsWithTimeout(timeout time.Duration) *UploadBMCUpdateParams {
	var ()
	return &UploadBMCUpdateParams{

		timeout: timeout,
	}
}

// NewUploadBMCUpdateParamsWithContext creates a new UploadBMCUpdateParams object
// with the default values initialized, and the ability to set a context for a request
func NewUploadBMCUpdateParamsWithContext(ctx context.Context) *UploadBMCUpdateParams {
	var ()
	return &UploadBMCUpdateParams{

		Context: ctx,
	}
}

// NewUploadBMCUpdateParamsWithHTTPClient creates a new UploadBMCUpdateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUploadBMCUpdateParamsWithHTTPClient(client *http.Client) *UploadBMCUpdateParams {
	var ()
	return &UploadBMCUpdateParams{
		HTTPClient: client,
	}
}

/*UploadBMCUpdateParams contains all the parameters to send to the API endpoint
for the upload b m c update operation typically these are written to a http.Request
*/
type UploadBMCUpdateParams struct {

	/*Board
	  the board

	*/
	Board *string
	/*File
	  the BMC update file

	*/
	File runtime.NamedReadCloser
	/*Revision
	  the BMC update revision

	*/
	Revision *string
	/*Vendor
	  the vendor

	*/
	Vendor *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the upload b m c update params
func (o *UploadBMCUpdateParams) WithTimeout(timeout time.Duration) *UploadBMCUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the upload b m c update params
func (o *UploadBMCUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the upload b m c update params
func (o *UploadBMCUpdateParams) WithContext(ctx context.Context) *UploadBMCUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the upload b m c update params
func (o *UploadBMCUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the upload b m c update params
func (o *UploadBMCUpdateParams) WithHTTPClient(client *http.Client) *UploadBMCUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the upload b m c update params
func (o *UploadBMCUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBoard adds the board to the upload b m c update params
func (o *UploadBMCUpdateParams) WithBoard(board *string) *UploadBMCUpdateParams {
	o.SetBoard(board)
	return o
}

// SetBoard adds the board to the upload b m c update params
func (o *UploadBMCUpdateParams) SetBoard(board *string) {
	o.Board = board
}

// WithFile adds the file to the upload b m c update params
func (o *UploadBMCUpdateParams) WithFile(file runtime.NamedReadCloser) *UploadBMCUpdateParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the upload b m c update params
func (o *UploadBMCUpdateParams) SetFile(file runtime.NamedReadCloser) {
	o.File = file
}

// WithRevision adds the revision to the upload b m c update params
func (o *UploadBMCUpdateParams) WithRevision(revision *string) *UploadBMCUpdateParams {
	o.SetRevision(revision)
	return o
}

// SetRevision adds the revision to the upload b m c update params
func (o *UploadBMCUpdateParams) SetRevision(revision *string) {
	o.Revision = revision
}

// WithVendor adds the vendor to the upload b m c update params
func (o *UploadBMCUpdateParams) WithVendor(vendor *string) *UploadBMCUpdateParams {
	o.SetVendor(vendor)
	return o
}

// SetVendor adds the vendor to the upload b m c update params
func (o *UploadBMCUpdateParams) SetVendor(vendor *string) {
	o.Vendor = vendor
}

// WriteToRequest writes these params to a swagger request
func (o *UploadBMCUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Board != nil {

		// query param board
		var qrBoard string
		if o.Board != nil {
			qrBoard = *o.Board
		}
		qBoard := qrBoard
		if qBoard != "" {
			if err := r.SetQueryParam("board", qBoard); err != nil {
				return err
			}
		}

	}

	if o.File != nil {

		if o.File != nil {

			// form file param file
			if err := r.SetFileParam("file", o.File); err != nil {
				return err
			}

		}

	}

	if o.Revision != nil {

		// query param revision
		var qrRevision string
		if o.Revision != nil {
			qrRevision = *o.Revision
		}
		qRevision := qrRevision
		if qRevision != "" {
			if err := r.SetQueryParam("revision", qRevision); err != nil {
				return err
			}
		}

	}

	if o.Vendor != nil {

		// query param vendor
		var qrVendor string
		if o.Vendor != nil {
			qrVendor = *o.Vendor
		}
		qVendor := qrVendor
		if qVendor != "" {
			if err := r.SetQueryParam("vendor", qVendor); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
